{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/TodoList.js\";\nimport React, { useState } from \"react\"; // import AddNewTask from \"./AddNewTask\";\n\nimport ListItems from \"./ListItems\"; // import defaultTodos from \"./ListItems.json\";\n\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(_ref) {\n  let {\n    todos\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: todos && todos.map(todo => /*#__PURE__*/_jsxDEV(ListItems, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/TodoList.js"],"names":["React","useState","ListItems","TodoList","todos","map","todo","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,OAA6B;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC3B,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGA,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBAAU,QAAC,SAAD;AAAyB,QAAA,IAAI,EAAEA;AAA/B,SAAgBA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,cAApB;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQJ,Q;AAUT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\n// import AddNewTask from \"./AddNewTask\";\nimport ListItems from \"./ListItems\";\n// import defaultTodos from \"./ListItems.json\";\nimport \"./TodoList.css\";\n\nfunction TodoList({ todos }) {\n  return (\n    <div>\n      <div className=\"list-container\">\n        {todos && todos.map((todo) => <ListItems key={todo.id} todo={todo} />)}\n      </div>\n      {/* <AddNewTask onAddTodo={addTodoHandler} /> */}\n    </div>\n  );\n}\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}