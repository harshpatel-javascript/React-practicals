{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListItems(props) {\n  _s();\n\n  const [checked, setChecked] = useState(localStorage.getItem(props.id)); // state handling as per the input:checkbox\n\n  const checkedHandler = e => {\n    const isNotChecked = e.target.checked;\n\n    if (isNotChecked) {\n      setChecked(true);\n      localStorage.setItem(props.id, true);\n      console.log(props.todo);\n    } else {\n      setChecked(false);\n      localStorage.removeItem(props.id);\n      console.log(props.todo);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: checked ? \"list not-completed\" : \"list not-completed\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"list-checkbox\",\n      type: \"checkbox\",\n      onChange: checkedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItems, \"R8ba+KOhcJWVvNpATz5EDxbu540=\");\n\n_c = ListItems;\nexport default ListItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js"],"names":["React","useState","ListItems","props","checked","setChecked","localStorage","getItem","id","checkedHandler","e","isNotChecked","target","setItem","console","log","todo","removeItem","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAACK,YAAY,CAACC,OAAb,CAAqBJ,KAAK,CAACK,EAA3B,CAAD,CAAtC,CADwB,CAExB;;AACA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASR,OAA9B;;AAEA,QAAIO,YAAJ,EAAkB;AAChBN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,YAAY,CAACO,OAAb,CAAqBV,KAAK,CAACK,EAA3B,EAA+B,IAA/B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,IAAlB;AACD,KAJD,MAIO;AACLX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,YAAY,CAACW,UAAb,CAAwBd,KAAK,CAACK,EAA9B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,IAAlB;AACD;AACF,GAZD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,GAAG,oBAAH,GAA0B,oBAAjD;AAAA,4BACE;AAAA,gBAAID,KAAK,CAACa,IAAN,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAET;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1BQP,S;;KAAAA,S;AA4BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ListItems(props) {\n  const [checked, setChecked] = useState(localStorage.getItem(props.id));\n  // state handling as per the input:checkbox\n  const checkedHandler = (e) => {\n    const isNotChecked = e.target.checked;\n\n    if (isNotChecked) {\n      setChecked(true);\n      localStorage.setItem(props.id, true);\n      console.log(props.todo);\n    } else {\n      setChecked(false);\n      localStorage.removeItem(props.id);\n      console.log(props.todo);\n    }\n  };\n  return (\n    <div className={checked ? \"list not-completed\" : \"list not-completed\"}>\n      <p>{props.todo.title}</p>\n      <input\n        className=\"list-checkbox\"\n        type=\"checkbox\"\n        onChange={checkedHandler}\n      />\n    </div>\n  );\n}\n\nexport default ListItems;\n"]},"metadata":{},"sourceType":"module"}