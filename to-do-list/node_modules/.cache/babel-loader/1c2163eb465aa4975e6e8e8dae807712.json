{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListItems(_ref) {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [checked, setChecked] = useState(localStorage.getItem({\n    checked: false\n  })); // state handling as per the input:checkbox\n\n  const checkedHandler = e => {\n    const isNotChecked = e.target.checked;\n\n    if (isNotChecked) {\n      setChecked(localStorage.setItem(todo.checked, true));\n      console.log(todo);\n    } else {\n      setChecked(localStorage.removeItem({\n        todo: {\n          checked: false\n        }\n      }));\n      console.log(todo);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: checked ? \"list not-completed\" : \"list completed\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"list-checkbox\",\n      type: \"checkbox\",\n      onChange: checkedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItems, \"Cuv1YgND/7bci1AJx2wV6cITl9k=\");\n\n_c = ListItems;\nexport default ListItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js"],"names":["React","useState","ListItems","todo","checked","setChecked","localStorage","getItem","checkedHandler","e","isNotChecked","target","setItem","console","log","removeItem","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CACpCK,YAAY,CAACC,OAAb,CAAqB;AAAEH,IAAAA,OAAO,EAAE;AAAX,GAArB,CADoC,CAAtC,CAD2B,CAI3B;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASP,OAA9B;;AAEA,QAAIM,YAAJ,EAAkB;AAChBL,MAAAA,UAAU,CAACC,YAAY,CAACM,OAAb,CAAqBT,IAAI,CAACC,OAA1B,EAAkC,IAAlC,CAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD,KAHD,MAGO;AACLE,MAAAA,UAAU,CAACC,YAAY,CAACS,UAAb,CAAwB;AAAEZ,QAAAA,IAAI,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAR,OAAxB,CAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,GAAG,oBAAH,GAA0B,gBAAjD;AAAA,4BACE;AAAA,gBAAID,IAAI,CAACa;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAER;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1BQN,S;;KAAAA,S;AA4BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction ListItems({ todo }) {\n  const [checked, setChecked] = useState(\n    localStorage.getItem({ checked: false })\n  );\n  // state handling as per the input:checkbox\n  const checkedHandler = (e) => {\n    const isNotChecked = e.target.checked;\n\n    if (isNotChecked) {\n      setChecked(localStorage.setItem(todo.checked,true));\n      console.log(todo);\n    } else {\n      setChecked(localStorage.removeItem({ todo: { checked: false } }));\n      console.log(todo);\n    }\n  };\n  return (\n    <div className={checked ? \"list not-completed\" : \"list completed\"}>\n      <p>{todo.title}</p>\n      <input\n        className=\"list-checkbox\"\n        type=\"checkbox\"\n        onChange={checkedHandler}\n      />\n    </div>\n  );\n}\n\nexport default ListItems;\n"]},"metadata":{},"sourceType":"module"}