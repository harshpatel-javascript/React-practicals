{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport taskIcon from \"../Images/bandcamp-brands.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListItems(_ref) {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [checked, setChecked] = useState(localStorage.getItem(todo.id)); // state handling as per the input:checkbox\n\n  const checkedHandler = e => {\n    const isNotChecked = e.target.checked;\n    console.log(checked);\n\n    if (isNotChecked) {\n      setChecked(true);\n      localStorage.setItem(todo.id, true);\n    } else {\n      setChecked(false);\n      localStorage.removeItem(todo.id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: checked ? \"list completed\" : \"list completed\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"list-checkbox\",\n      type: \"checkbox\",\n      onChange: checkedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: checked ? \"task-icon hidden\" : \"task-icon show\",\n      src: taskIcon,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItems, \"W/8q/+PGa3BILGDb23rsthYib7E=\");\n\n_c = ListItems;\nexport default ListItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItems\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/ListItems.js"],"names":["React","useState","taskIcon","ListItems","todo","checked","setChecked","localStorage","getItem","id","checkedHandler","e","isNotChecked","target","console","log","setItem","removeItem","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,+BAArB;;;AACA,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqBJ,IAAI,CAACK,EAA1B,CAAD,CAAtC,CAD2B,CAE3B;;AACA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASR,OAA9B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;;AACA,QAAIO,YAAJ,EAAkB;AAChBN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,YAAY,CAACS,OAAb,CAAqBZ,IAAI,CAACK,EAA1B,EAA8B,IAA9B;AACD,KAHD,MAGO;AACLH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,YAAY,CAACU,UAAb,CAAwBb,IAAI,CAACK,EAA7B;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,GAAG,gBAAH,GAAsB,gBAA7C;AAAA,4BACE;AAAA,gBAAID,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAER;AAHZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AACE,MAAA,SAAS,EAAEL,OAAO,GAAG,kBAAH,GAAwB,gBAD5C;AAEE,MAAA,GAAG,EAAEH,QAFP;AAGE,MAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7BQC,S;;KAAAA,S;AA+BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport taskIcon from \"../Images/bandcamp-brands.svg\";\nfunction ListItems({ todo }) {\n  const [checked, setChecked] = useState(localStorage.getItem(todo.id));\n  // state handling as per the input:checkbox\n  const checkedHandler = (e) => {\n    const isNotChecked = e.target.checked;\n    console.log(checked);\n    if (isNotChecked) {\n      setChecked(true);\n      localStorage.setItem(todo.id, true);\n    } else {\n      setChecked(false);\n      localStorage.removeItem(todo.id);\n    }\n  };\n  return (\n    <div className={checked ? \"list completed\" : \"list completed\"}>\n      <p>{todo.title}</p>\n      <input\n        className=\"list-checkbox\"\n        type=\"checkbox\"\n        onChange={checkedHandler}\n      />\n      <img\n        className={checked ? \"task-icon hidden\" : \"task-icon show\"}\n        src={taskIcon}\n        alt=\"\"\n      />\n    </div>\n  );\n}\n\nexport default ListItems;\n"]},"metadata":{},"sourceType":"module"}