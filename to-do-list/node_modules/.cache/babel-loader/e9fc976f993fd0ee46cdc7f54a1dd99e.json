{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/Lists.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\nimport defined_todos from \"./ListItems.json\";\nimport \"./Lists.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Lists() {\n  _s();\n\n  const [todos, setTodos] = useState(defined_todos);\n\n  const addTodoHandler = todo => {\n    setTodos(prevTodo => {\n      return [...prevTodo, todo];\n    });\n  }; // const [checked, setChecked] = useState(false);\n\n\n  const checkedHandler = e => {\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__container\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list \",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: checked,\n          onChange: e => checkedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Lists, \"CmQJHzUtY3UHGoeDBvPrZVWIhjI=\");\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/Lists.js"],"names":["React","useState","InputForm","defined_todos","Lists","todos","setTodos","addTodoHandler","todo","prevTodo","checkedHandler","e","console","log","target","value","map","checked","id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,aAAP;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,aAAD,CAAlC;;AACA,QAAMI,cAAc,GAAIC,IAAD,IAAU;AAC/BF,IAAAA,QAAQ,CAAEG,QAAD,IAAc;AACrB,aAAO,CAAC,GAAGA,QAAJ,EAAcD,IAAd,CAAP;AACD,KAFO,CAAR;AAGD,GAJD,CAFe,CAOf;;;AAEA,QAAME,cAAc,GAAIC,CAAD,IAAO;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGV,KAAK,CAACW,GAAN,CAAWR,IAAD,iBACT;AAAmB,QAAA,SAAS,EAAE,OAA9B;AAAA,gCACE;AAAA,oBAAIA,IAAI,CAACA;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAES,OAFT;AAGE,UAAA,QAAQ,EAAGN,CAAD,IAAOD;AAHnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,IAAI,CAACU,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAkBD;;GA9BQH,K;;KAAAA,K;AA+BT,eAAeA,KAAf","sourcesContent":["/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport InputForm from \"./InputForm\";\nimport defined_todos from \"./ListItems.json\";\nimport \"./Lists.css\";\nfunction Lists() {\n  const [todos, setTodos] = useState(defined_todos);\n  const addTodoHandler = (todo) => {\n    setTodos((prevTodo) => {\n      return [...prevTodo, todo];\n    });\n  };\n  // const [checked, setChecked] = useState(false);\n\n  const checkedHandler = (e) => {\n    console.log(e.target.value);\n  };\n  return (\n    <>\n      <div className=\"list__container\">\n        {todos.map((todo) => (\n          <div key={todo.id} className={\"list \"}>\n            <p>{todo.todo}</p>\n            <input\n              type=\"checkbox\"\n              value={checked}\n              onChange={(e) => checkedHandler}\n            />\n          </div>\n        ))}\n      </div>\n      {/* {todos.map((todo) => console.log(todo.todo)} */}\n      <InputForm onAddTodo={addTodoHandler} />\n    </>\n  );\n}\nexport default Lists;\n"]},"metadata":{},"sourceType":"module"}