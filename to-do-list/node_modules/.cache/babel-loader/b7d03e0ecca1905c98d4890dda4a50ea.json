{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/AddNewTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./AddNewTask.css\";\nimport plus from \"../Images/plus.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewTask(_ref) {\n  _s();\n\n  let {\n    onAddTodo,\n    todos\n  } = _ref;\n  const [enteredTodo, setEnteredTodo] = useState(todos);\n  const [isClicked, setIsClicked] = useState(false);\n\n  function clickHandler() {\n    !isClicked ? setIsClicked(true) : setIsClicked(false);\n  } // on form submission handler\n\n\n  function addNewTaskHandler(event) {\n    event.preventDefault(); // error handling for not giving input\n\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defaultTodos = {\n        id: Math.random().toString(),\n        title: enteredTodo\n      };\n      onAddTodo(...todos, defaultTodos);\n      setEnteredTodo(\"\");\n    }\n  }\n\n  const keyPressHandler = event => {\n    // console.log(event.code);\n    if (event.code === \"Escape\") {\n      setIsClicked(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-new-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: isClicked ? \"form-container\" : \"form-container-hidden\",\n      onSubmit: addNewTaskHandler,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: enteredTodo,\n        onKeyDown: keyPressHandler,\n        onChange: e => setEnteredTodo(e.target.value),\n        placeholder: \"Enter Your Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: isClicked ? \"btn-hidden\" : \"btn\",\n      onClick: clickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: plus,\n        alt: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNewTask, \"gO5gtsv4uiNRO5rGtiekCRDlrrg=\");\n\n_c = AddNewTask;\nexport default AddNewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/AddNewTask.js"],"names":["React","useState","plus","AddNewTask","onAddTodo","todos","enteredTodo","setEnteredTodo","isClicked","setIsClicked","clickHandler","addNewTaskHandler","event","preventDefault","alert","defaultTodos","id","Math","random","toString","title","keyPressHandler","code","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,UAAT,OAA0C;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAsB;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACI,KAAD,CAA9C;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AACA,WAASS,YAAT,GAAwB;AACtB,KAACF,SAAD,GAAaC,YAAY,CAAC,IAAD,CAAzB,GAAkCA,YAAY,CAAC,KAAD,CAA9C;AACD,GALuC,CAMxC;;;AACA,WAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CAEhC;;AACA,QAAIP,WAAW,KAAK,EAApB,EAAwB;AACtBQ,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,YAAY,GAAG;AACnBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADe;AAEnBC,QAAAA,KAAK,EAAEd;AAFY,OAArB;AAIAF,MAAAA,SAAS,CAAC,GAAGC,KAAJ,EAAWU,YAAX,CAAT;AACAR,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF;;AACD,QAAMc,eAAe,GAAIT,KAAD,IAAW;AACjC;AACA,QAAIA,KAAK,CAACU,IAAN,KAAe,QAAnB,EAA6B;AAC3Bb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAED,SAAS,GAAG,gBAAH,GAAsB,uBAD5C;AAEE,MAAA,QAAQ,EAAEG,iBAFZ;AAAA,6BAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEL,WAFT;AAGE,QAAA,SAAS,EAAEe,eAHb;AAIE,QAAA,QAAQ,EAAGE,CAAD,IAAOhB,cAAc,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJjC;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AACE,MAAA,SAAS,EAAEjB,SAAS,GAAG,YAAH,GAAkB,KADxC;AAEE,MAAA,OAAO,EAAEE,YAFX;AAAA,6BAIE;AAAK,QAAA,GAAG,EAAER,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAjDQC,U;;KAAAA,U;AAmDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./AddNewTask.css\";\nimport plus from \"../Images/plus.png\";\n\nfunction AddNewTask({ onAddTodo, todos }) {\n  const [enteredTodo, setEnteredTodo] = useState(todos);\n  const [isClicked, setIsClicked] = useState(false);\n  function clickHandler() {\n    !isClicked ? setIsClicked(true) : setIsClicked(false);\n  }\n  // on form submission handler\n  function addNewTaskHandler(event) {\n    event.preventDefault();\n    // error handling for not giving input\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defaultTodos = {\n        id: Math.random().toString(),\n        title: enteredTodo,\n      };\n      onAddTodo(...todos, defaultTodos);\n      setEnteredTodo(\"\");\n    }\n  }\n  const keyPressHandler = (event) => {\n    // console.log(event.code);\n    if (event.code === \"Escape\") {\n      setIsClicked(false);\n    }\n  };\n  return (\n    <div className=\"add-new-task-container\">\n      <form\n        className={isClicked ? \"form-container\" : \"form-container-hidden\"}\n        onSubmit={addNewTaskHandler}\n      >\n        <input\n          type=\"text\"\n          value={enteredTodo}\n          onKeyDown={keyPressHandler}\n          onChange={(e) => setEnteredTodo(e.target.value)}\n          placeholder=\"Enter Your Task\"\n        />\n      </form>\n      <button\n        className={isClicked ? \"btn-hidden\" : \"btn\"}\n        onClick={clickHandler}\n      >\n        <img src={plus} alt=\"plus\" />\n      </button>\n    </div>\n  );\n}\n\nexport default AddNewTask;\n"]},"metadata":{},"sourceType":"module"}