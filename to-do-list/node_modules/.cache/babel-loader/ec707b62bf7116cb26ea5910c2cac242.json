{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/AddNewTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./AddNewTask.css\";\nimport plus from \"../Images/plus.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewTask(_ref) {\n  _s();\n\n  let {} = _ref;\n  const [isClicked, setIsClicked] = useState(false);\n\n  function clickHandler(e) {\n    !isClicked ? setIsClicked(true) : setIsClicked(false);\n  }\n\n  const [enteredTodo, setEnteredTodo] = useState([]); // on form submission handler\n\n  function submitHandler(e) {\n    e.preventDefault(); // error handling for not giving input\n\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defaultTodos = {\n        id: Math.random().toString(),\n        todo: enteredTodo\n      };\n      props.onAddTodo(defaultTodos);\n      setEnteredTodo(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-new-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: isClicked ? \"form-container\" : \"form-container-hidden\",\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: enteredTodo,\n        onChange: e => setEnteredTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: clickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: plus,\n        alt: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNewTask, \"WUs9ArweTfLBpv688CgmKJBEvbo=\");\n\n_c = AddNewTask;\nexport default AddNewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/AddNewTask.js"],"names":["React","useState","plus","AddNewTask","isClicked","setIsClicked","clickHandler","e","enteredTodo","setEnteredTodo","submitHandler","preventDefault","alert","defaultTodos","id","Math","random","toString","todo","props","onAddTodo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,UAAT,OAAwB;AAAA;;AAAA,MAAJ,EAAI;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AACA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,KAACH,SAAD,GAAaC,YAAY,CAAC,IAAD,CAAzB,GAAkCA,YAAY,CAAC,KAAD,CAA9C;AACD;;AACD,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CALsB,CAMtB;;AACA,WAASS,aAAT,CAAuBH,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACI,cAAF,GADwB,CAExB;;AACA,QAAIH,WAAW,KAAK,EAApB,EAAwB;AACtBI,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,YAAY,GAAG;AACnBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADe;AAEnBC,QAAAA,IAAI,EAAEV;AAFa,OAArB;AAIAW,MAAAA,KAAK,CAACC,SAAN,CAAgBP,YAAhB;AACAJ,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAEL,SAAS,GAAG,gBAAH,GAAsB,uBAD5C;AAEE,MAAA,QAAQ,EAAEM,aAFZ;AAAA,6BAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEF,WAFT;AAGE,QAAA,QAAQ,EAAGD,CAAD,IAAOE,cAAc,CAACF,CAAC,CAACc,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEhB,YAAjC;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEJ,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQC,U;;KAAAA,U;AAwCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./AddNewTask.css\";\nimport plus from \"../Images/plus.png\";\n\nfunction AddNewTask({}) {\n  const [isClicked, setIsClicked] = useState(false);\n  function clickHandler(e) {\n    !isClicked ? setIsClicked(true) : setIsClicked(false);\n  }\n  const [enteredTodo, setEnteredTodo] = useState([]);\n  // on form submission handler\n  function submitHandler(e) {\n    e.preventDefault();\n    // error handling for not giving input\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defaultTodos = {\n        id: Math.random().toString(),\n        todo: enteredTodo,\n      };\n      props.onAddTodo(defaultTodos);\n      setEnteredTodo(\"\");\n    }\n  }\n  return (\n    <div className=\"add-new-task-container\">\n      <form\n        className={isClicked ? \"form-container\" : \"form-container-hidden\"}\n        onSubmit={submitHandler}\n      >\n        <input\n          type=\"text\"\n          value={enteredTodo}\n          onChange={(e) => setEnteredTodo(e.target.value)}\n        />\n      </form>\n      <button className=\"btn\" onClick={clickHandler}>\n        <img src={plus} alt=\"plus\" />\n      </button>\n    </div>\n  );\n}\n\nexport default AddNewTask;\n"]},"metadata":{},"sourceType":"module"}