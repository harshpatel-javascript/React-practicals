{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./InputForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputForm(props) {\n  _s();\n\n  const [enteredTodo, setEnteredTodo] = useState([]); // adding the \n\n  function submitHandler(e) {\n    e.preventDefault(); // error handling for not giving input\n\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defined_todos = {\n        id: Math.random().toString(),\n        todo: enteredTodo\n      };\n      props.onAddTodo(defined_todos);\n      setEnteredTodo(\"\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form__container\",\n    action: \"\",\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: enteredTodo,\n      onChange: e => setEnteredTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputForm, \"ebJqnNxF2cdcLC4OwLPfvarzmP4=\");\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/InputForm.js"],"names":["React","useState","InputForm","props","enteredTodo","setEnteredTodo","submitHandler","e","preventDefault","alert","defined_todos","id","Math","random","toString","todo","onAddTodo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CADwB,CAExB;;AACA,WAASK,aAAT,CAAuBC,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CAExB;;AACA,QAAIJ,WAAW,KAAK,EAApB,EAAwB;AACtBK,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,aAAa,GAAG;AACpBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADgB;AAEpBC,QAAAA,IAAI,EAAEX;AAFc,OAAtB;AAIAD,MAAAA,KAAK,CAACa,SAAN,CAAgBN,aAAhB;AACAL,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF;;AACD,sBACE;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,MAAM,EAAC,EAAzC;AAA4C,IAAA,QAAQ,EAAEC,aAAtD;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEF,WAFT;AAGE,MAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACU,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BQhB,S;;KAAAA,S;AA4BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./InputForm.css\";\n\nfunction InputForm(props) {\n  const [enteredTodo, setEnteredTodo] = useState([]);\n  // adding the \n  function submitHandler(e) {\n    e.preventDefault();\n    // error handling for not giving input\n    if (enteredTodo === \"\") {\n      alert(\"Please enter the todo.\");\n    } else {\n      const defined_todos = {\n        id: Math.random().toString(),\n        todo: enteredTodo,\n      };\n      props.onAddTodo(defined_todos);\n      setEnteredTodo(\"\");\n    }\n  }\n  return (\n    <form className=\"form__container\" action=\"\" onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        value={enteredTodo}\n        onChange={(e) => setEnteredTodo(e.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}