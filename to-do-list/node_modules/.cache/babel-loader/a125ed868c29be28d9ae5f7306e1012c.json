{"ast":null,"code":"var _jsxFileName = \"/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddNewTask from \"./AddNewTask\";\nimport ListItems from \"./ListItems\";\nimport defaultTodos from \"./ListItems.json\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState(); // handling when the input will be submitted via inputForm\n\n  const addTodoHandler = todo => {\n    setTodos(prevTodos => [...prevTodos, todo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(ListItems, {\n        todo: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddNewTask, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"RucsOra5vks4JlzT2I3E4dDnQGY=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/harshpatel/Simform learning/React-Practicals/to-do-list/src/Components/TodoList.js"],"names":["React","useState","AddNewTask","ListItems","defaultTodos","TodoList","todos","setTodos","addTodoHandler","todo","prevTodos","map","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAO,gBAAP;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC,CADkB,CAElB;;AACA,QAAMO,cAAc,GAAIC,IAAD,IAAU;AAC/BF,IAAAA,QAAQ,CAAEG,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,IAAf,CAAhB,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGH,KAAK,CAACK,GAAN,CAAWF,IAAD,iBACT,QAAC,SAAD;AAAyB,QAAA,IAAI,EAAEA,IAAI,CAACG;AAApC,SAAgBH,IAAI,CAACI,EAArB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEL;AAAvB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAhBQH,Q;;KAAAA,Q;AAiBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport AddNewTask from \"./AddNewTask\";\nimport ListItems from \"./ListItems\";\nimport defaultTodos from \"./ListItems.json\";\nimport \"./TodoList.css\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState();\n  // handling when the input will be submitted via inputForm\n  const addTodoHandler = (todo) => {\n    setTodos((prevTodos) => [...prevTodos, todo]);\n  };\n  return (\n    <>\n      <div className=\"list-container\">\n        {todos.map((todo) => (\n          <ListItems key={todo.id} todo={todo.title} />\n        ))}\n      </div>\n      <AddNewTask onAddTodo={addTodoHandler} />\n    </>\n  );\n}\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}